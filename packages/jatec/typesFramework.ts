import { AbsoluteFile, LogProv } from "^jab";
import { FinallyFunc } from "^finally-provider";
import { OnRogue, TestCurLogs, TestExpLogs, TestResult } from "./internal";

//
// test framework
//

export type ClientTestInfo = {
  id: string;
  name: string;
  file: string; //absolute, it should be.
  line?: number;
};

export type TestInfo = {
  id: string;
  name: string;
  file: AbsoluteFile; //absolute path
  line?: number;
};

export type TestFrameworkProv = {
  testLogController: TestLogsProv;

  getTestInfo: () => Promise<TestInfo[]>;

  //quick fix for jarun. Probably nothing the framework should think about.
  getCurrentSelectionTestInfo: () => Promise<TestInfo[]>;

  /**
   * - globalId is an opaque string generated by jate.
   *    The test framework should use it to report rogue tests, etc.
   * - id comes from the individual frameworks. They return it in `getTestIds`.
   */
  runTest: (globalId: string, id: string) => Promise<TestResult>;
  kill: () => Promise<void>;
};

export type TestLogsProv = {
  setCurLogs: (id: string, testLogs: TestCurLogs) => void;
  getExpLogs: (id: string) => Promise<TestExpLogs>;
  acceptTestLog: (
    id: string,
    logName: string
  ) => Promise<{ exp: TestExpLogs; cur: TestCurLogs }>;
  acceptTestLogs: (
    id: string
  ) => Promise<{ exp: TestExpLogs; cur: TestCurLogs }>;
  getTempTestLogFiles: (
    id: string,
    logName: string
  ) => Promise<{ exp: string; cur: string }>;
};

export type MakeTestFrameworkDeps = {
  onRogueTest: OnRogue;

  onError: (error: unknown) => void;
  finally: FinallyFunc;
  logProv: LogProv;
};

export type MakeTestFramework = (
  deps: MakeTestFrameworkDeps
) => TestFrameworkProv;

export type MakeTestFrameworks = (
  deps: MakeTestFrameworkDeps
) => TestFrameworkProv[];
